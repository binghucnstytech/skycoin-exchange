// Code generated by protoc-gen-go.
// source: pp.coin.proto
// DO NOT EDIT!

package pp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetCoinsReq struct {
	AccountId        *string `protobuf:"bytes,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetCoinsReq) Reset()                    { *m = GetCoinsReq{} }
func (m *GetCoinsReq) String() string            { return proto.CompactTextString(m) }
func (*GetCoinsReq) ProtoMessage()               {}
func (*GetCoinsReq) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *GetCoinsReq) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

type CoinsRes struct {
	Result           *Result  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	Coins            []string `protobuf:"bytes,10,rep,name=coins" json:"coins,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CoinsRes) Reset()                    { *m = CoinsRes{} }
func (m *CoinsRes) String() string            { return proto.CompactTextString(m) }
func (*CoinsRes) ProtoMessage()               {}
func (*CoinsRes) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *CoinsRes) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *CoinsRes) GetCoins() []string {
	if m != nil {
		return m.Coins
	}
	return nil
}

func init() {
	proto.RegisterType((*GetCoinsReq)(nil), "pp.GetCoinsReq")
	proto.RegisterType((*CoinsRes)(nil), "pp.CoinsRes")
}

func init() { proto.RegisterFile("pp.coin.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x28, 0xd0, 0x4b,
	0xce, 0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x28, 0x90, 0xe2, 0x07,
	0x0b, 0xe5, 0xe6, 0xe6, 0x43, 0x05, 0x95, 0x14, 0xb9, 0xb8, 0xdd, 0x53, 0x4b, 0x9c, 0x81, 0xaa,
	0x8a, 0x83, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0xb8, 0x12, 0x93, 0x93, 0xf3, 0x4b, 0xf3, 0x4a, 0xe2,
	0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x95, 0x4c, 0xb9, 0x38, 0xa0, 0xf2, 0xc5, 0x42,
	0x52, 0x5c, 0x6c, 0x45, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x40, 0x39, 0x26, 0x0d, 0x6e, 0x23, 0x2e,
	0x3d, 0xa0, 0x81, 0x41, 0x60, 0x11, 0x21, 0x5e, 0x2e, 0x56, 0x90, 0x6d, 0xc5, 0x12, 0x5c, 0x0a,
	0xcc, 0x1a, 0x9c, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xe7, 0x4f, 0xc6, 0x7e, 0x00, 0x00,
	0x00,
}
