// Code generated by protoc-gen-go.
// source: pp.order.proto
// DO NOT EDIT!

package pp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type OrderReq struct {
	AccountId        []byte  `protobuf:"bytes,1,opt,name=account_id" json:"account_id,omitempty"`
	CoinPair         *string `protobuf:"bytes,10,opt,name=coin_pair" json:"coin_pair,omitempty"`
	Amount           *uint64 `protobuf:"varint,11,opt,name=amount" json:"amount,omitempty"`
	Price            *uint64 `protobuf:"varint,12,opt,name=price" json:"price,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OrderReq) Reset()                    { *m = OrderReq{} }
func (m *OrderReq) String() string            { return proto.CompactTextString(m) }
func (*OrderReq) ProtoMessage()               {}
func (*OrderReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *OrderReq) GetAccountId() []byte {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *OrderReq) GetCoinPair() string {
	if m != nil && m.CoinPair != nil {
		return *m.CoinPair
	}
	return ""
}

func (m *OrderReq) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *OrderReq) GetPrice() uint64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

type OrderRes struct {
	AccountId        []byte  `protobuf:"bytes,1,opt,name=account_id" json:"account_id,omitempty"`
	OrderId          *uint64 `protobuf:"varint,10,opt,name=order_id" json:"order_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OrderRes) Reset()                    { *m = OrderRes{} }
func (m *OrderRes) String() string            { return proto.CompactTextString(m) }
func (*OrderRes) ProtoMessage()               {}
func (*OrderRes) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *OrderRes) GetAccountId() []byte {
	if m != nil {
		return m.AccountId
	}
	return nil
}

func (m *OrderRes) GetOrderId() uint64 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type Order struct {
	Id               *uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AccountId        *string `protobuf:"bytes,2,opt,name=account_id" json:"account_id,omitempty"`
	Type             *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Price            *uint64 `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	Amount           *uint64 `protobuf:"varint,5,opt,name=amount" json:"amount,omitempty"`
	RestAmt          *uint64 `protobuf:"varint,6,opt,name=rest_amt" json:"rest_amt,omitempty"`
	CreatedTime      *int64  `protobuf:"varint,7,opt,name=created_time" json:"created_time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *Order) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Order) GetAccountId() string {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return ""
}

func (m *Order) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Order) GetPrice() uint64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Order) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *Order) GetRestAmt() uint64 {
	if m != nil && m.RestAmt != nil {
		return *m.RestAmt
	}
	return 0
}

func (m *Order) GetCreatedTime() int64 {
	if m != nil && m.CreatedTime != nil {
		return *m.CreatedTime
	}
	return 0
}

type GetOrderReq struct {
	CoinPair         *string `protobuf:"bytes,1,opt,name=coin_pair" json:"coin_pair,omitempty"`
	Type             *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Start            *int64  `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	End              *int64  `protobuf:"varint,4,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetOrderReq) Reset()                    { *m = GetOrderReq{} }
func (m *GetOrderReq) String() string            { return proto.CompactTextString(m) }
func (*GetOrderReq) ProtoMessage()               {}
func (*GetOrderReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *GetOrderReq) GetCoinPair() string {
	if m != nil && m.CoinPair != nil {
		return *m.CoinPair
	}
	return ""
}

func (m *GetOrderReq) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *GetOrderReq) GetStart() int64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *GetOrderReq) GetEnd() int64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

type GetOrderRes struct {
	Result           *Result  `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	CoinPair         *string  `protobuf:"bytes,10,opt,name=coin_pair" json:"coin_pair,omitempty"`
	Type             *string  `protobuf:"bytes,11,opt,name=type" json:"type,omitempty"`
	Orders           []*Order `protobuf:"bytes,21,rep,name=orders" json:"orders,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetOrderRes) Reset()                    { *m = GetOrderRes{} }
func (m *GetOrderRes) String() string            { return proto.CompactTextString(m) }
func (*GetOrderRes) ProtoMessage()               {}
func (*GetOrderRes) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *GetOrderRes) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetOrderRes) GetCoinPair() string {
	if m != nil && m.CoinPair != nil {
		return *m.CoinPair
	}
	return ""
}

func (m *GetOrderRes) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *GetOrderRes) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func init() {
	proto.RegisterType((*OrderReq)(nil), "pp.OrderReq")
	proto.RegisterType((*OrderRes)(nil), "pp.OrderRes")
	proto.RegisterType((*Order)(nil), "pp.Order")
	proto.RegisterType((*GetOrderReq)(nil), "pp.GetOrderReq")
	proto.RegisterType((*GetOrderRes)(nil), "pp.GetOrderRes")
}

func init() { proto.RegisterFile("pp.order.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0xd9, 0x24, 0x36, 0x93, 0x58, 0x75, 0x51, 0x58, 0x7b, 0x2a, 0x39, 0xf5, 0x14, 0xc4,
	0x3f, 0x21, 0x78, 0x51, 0xfa, 0x07, 0xc2, 0xb2, 0x99, 0x43, 0xc0, 0x64, 0xd7, 0xcd, 0xf4, 0x20,
	0xf8, 0xe3, 0xdd, 0x1d, 0x6d, 0xb4, 0xd2, 0xe3, 0x7b, 0xcc, 0xfb, 0x98, 0x07, 0x6b, 0xe7, 0x5a,
	0xeb, 0x7b, 0xf4, 0xad, 0xf3, 0x96, 0xac, 0x4c, 0x9d, 0xdb, 0x5c, 0x05, 0xce, 0xd8, 0x71, 0xb4,
	0xd3, 0x37, 0xd9, 0xbc, 0xc2, 0xea, 0x25, 0xde, 0xec, 0xf1, 0x5d, 0x4a, 0x00, 0x6d, 0x8c, 0x3d,
	0x4c, 0xd4, 0x0d, 0xbd, 0x4a, 0xb6, 0xc9, 0xae, 0x96, 0x37, 0x50, 0x1a, 0x3b, 0x4c, 0x9d, 0xd3,
	0x83, 0x57, 0x10, 0xa8, 0x52, 0xae, 0xa1, 0xd0, 0x63, 0xbc, 0x52, 0x55, 0xc0, 0x99, 0xbc, 0x84,
	0xdc, 0xf9, 0xc1, 0xa0, 0xaa, 0x23, 0x6c, 0x1e, 0x16, 0xc7, 0xf9, 0xac, 0xe3, 0x35, 0xac, 0xb8,
	0x55, 0x64, 0x80, 0x15, 0x9f, 0x90, 0xb3, 0x22, 0x5c, 0xa7, 0x3f, 0x67, 0xd9, 0x3f, 0x69, 0xca,
	0xc9, 0x35, 0x64, 0xf4, 0xe1, 0x50, 0x09, 0x46, 0x4b, 0x6e, 0xc6, 0x82, 0xdf, 0x5a, 0x39, 0xe3,
	0x90, 0xe3, 0x71, 0xa6, 0x4e, 0x8f, 0xa4, 0x0a, 0x66, 0x6e, 0xa1, 0x36, 0x1e, 0x35, 0x61, 0xdf,
	0xd1, 0x30, 0xa2, 0xba, 0x08, 0xac, 0x68, 0x9e, 0xa1, 0x7a, 0x42, 0x5a, 0x46, 0x38, 0x79, 0x38,
	0x39, 0x89, 0x4d, 0x8f, 0xb1, 0x33, 0x69, 0x4f, 0xdc, 0x42, 0xc8, 0x0a, 0x04, 0x4e, 0x3d, 0x77,
	0x10, 0x0d, 0xfe, 0xf5, 0x9a, 0xe5, 0x06, 0x8a, 0x50, 0xe1, 0xf0, 0x46, 0xc1, 0x28, 0xdd, 0x55,
	0x8f, 0xd0, 0x86, 0xf9, 0xf7, 0xcc, 0x9c, 0x1b, 0xf6, 0x98, 0x53, 0x31, 0xba, 0x87, 0x82, 0x77,
	0x9a, 0xd5, 0xdd, 0x56, 0x04, 0x71, 0x19, 0xc5, 0x6c, 0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0xc7,
	0x04, 0xa2, 0x0d, 0xda, 0x01, 0x00, 0x00,
}
